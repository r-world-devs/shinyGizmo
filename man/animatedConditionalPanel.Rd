% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animatedConditionalPanel.R
\name{animatedConditionalPanel}
\alias{animatedConditionalPanel}
\title{Animated conditional panel}
\usage{
animatedConditionalPanel(
  ui,
  condition,
  show = animateCSS("fadeIn", duration = 0),
  hide = animateCSS("fadeOut", duration = 0),
  fadeIn = 0,
  fadeOut = 0,
  ns = shiny::NS(NULL)
)
}
\arguments{
\item{ui, condition, ns}{arguments passed to \code{\link{conditionalJS}}}

\item{show, hide}{CSS effects created with \code{\link{animateCSS}}; there's
no effect with the default values}

\item{fadeIn}{duration of fade in effect (on showing) in milliseconds}

\item{fadeOut}{duration of fade out effect (on hiding) in milliseconds}
}
\value{
A \code{shiny.tag.list} object, to put in a Shiny UI.
}
\description{
Conditional panel with CSS animations on showing/hiding.
}
\examples{
library(shiny)
library(shinyGizmo)

ui <- fluidPage(
  sidebarPanel(
    actionButton("showplot", "Show/Hide")
  ),
  mainPanel(
    animatedConditionalPanel(
      plotOutput("plot"),
      condition = "input.showplot \% 2 === 1",
      show = animateCSS(
        "bounceIn", duration = 2000, then = animateCSS("headShake")
      ),
      hide = animateCSS(
        "pulse", duration = 1000, then = animateCSS("tada")
      ),
      fadeIn = 0, # there's already a "in" effect (bounceIn)
      fadeOut = 1000
    )
  )
)

server <- function(input, output){
  x <- rnorm(100)
  y <- rnorm(100)
  output[["plot"]] <- renderPlot({
    plot(x, y, pch = 19)
  })
}

if(interactive()){
  shinyApp(ui, server)
}
}
